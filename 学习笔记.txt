1.安装python 3.7 
2.安装django 2.2
3.创建项目 django-admin.py startproject  项目名
4.修改数据库以及字符编码配置
DATABASES = {
    'default': {
		'ENGINE': 'django.db.backends.mysql', 
		'NAME': 'Djangoadmin', 
		'USER':'root', 
		'PASSWORD':'123456', 
		'PORT':'3306', 
    }
}

# 切换mysql必须 安装pymsql
# pip install pymysql
安装完毕，打开_init_.py,添加代码：
import pymysql 
pymysql.install_as_MySQLdb()
进入python安装目录下django的目录里 django\db\backends\mysql 下的base.py  注释掉
#if version < (1, 3, 13):
#   raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__)
这两行
进入python安装目录下django的目录里 django\db\backends\mysql 下的operations.py 
query = query.decode(errors='replace') 改成 query = query

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'



5.创建新的app  django-admin startapp demoapp名
##################################################################################################
6.集成xadmin后台 下载xadmin源码
安装pip install django-crispy-forms
安装pip install django-formtools
安装pip install django-import-export

先执行python manage.py makemigrations 
然后执行python manage.py migrate 生成数据库
如果出现sql语句问题，多半是mysql版本太旧，升级到mysql5.7之后没有问题 升级软件后需修复数据库 mysql_upgrade -u root -p密码

其他的缺少什么pip install什么

运行服务  python manage.py runserver 0.0.0.0:8000

创建一个管理用户：
python manage.py createsuperuser
###############################################################################################
7.假如要开发api接口 
安装pip install django-rest-framework   接口序列化框架
安装pip install django-rest-swagger     接口文档自动生成框架
pip install coreapi pygments markdown   （另外一种文档生成）

还可能需要以下依赖
pip install httplib2
pip install six
pip install Pillow

可能会出现如下问题running build_ext error: [WinError 2] 系统找不到指定的文件  需要修改D:\ProgramData\Anaconda3\Lib\distutils\distutils.cfg 这个文件
compiler=mingw32 改 compiler=msvc
参考 https://www.520pf.cn/article/146.html
###############################################################################################
8.配置django使用redis缓存
官网下载redis 安装redis https://www.runoob.com/redis/redis-install.html
修改redis.windows.conf文件 设置redis密码 ，默认无密码：requirepass foobared 改 requirepass 123456
pip install django-redis

settings.py中加入以下内容,your_host_ip换成你的服务器地址,yoursecret换成你的服务器密码

CACHES = {
    
'default': {
       
 'BACKEND': 'django_redis.cache.RedisCache',
 
       'LOCATION': 'redis://your_host_ip:6379',

        "OPTIONS": {
            
		"CLIENT_CLASS": "django_redis.client.DefaultClient",
 
	            "PASSWORD": "yoursecret",
 
       },

    },

}




REDIS_TIMEOUT=7*24*60*60

CUBES_REDIS_TIMEOUT=60*60

NEVER_REDIS_TIMEOUT=365*24*60*60

cache中的是必须的，下面三条可有可无

缓存使用例子
from django.core.cache import cache

# 给redis中加入了键为key1，值为value1缓存，过期时间20秒

cache.set(“key1”, “value1”, 20).  

# 参数：timeout=20, 过期时间20

# nx=True. 默认为False，重复命名时覆盖，True表示重复命名时不能再重新赋值


# 获取cache值：

val = cache.get(“key1”),

# 获取key3的过期时间，返回值：0表示无此键或已过期，None表示未设置过期时间，有过期时间的返回秒数。

cache.ttl(“key3”). 

# 注意：在redis中存储的值并不是按照给定的键存储的，是根据键值又拼装的键(在你的key前面加上了个“:1:”)。

# 删除redis中key1的值

cache.delete(‘key1’)

使用get_redis_connection(保存热词，自动统计次数)
from django_reids import get_redis_connection

# get_redis_connection(‘default’)用法：

Conn = get_redis_connection(‘default’)

# 表示网redis里面存入了数据，键key1，值val1，但是注意不能再redis中获取，只能用conn获取，

# 返回值是添加量，初始为1.0，如果再加一个一摸一样的，就是2.0，注意：可以往一个键中添加多个值，如

Conn.zincrby(key1, '333').  
 
Conn.zincrby(key1, 'HELLO')

Conn.zincrby(key1, 'ooo')

Conn.zincrby(key1, 'world')

Conn.zincrby(key1, '444')

Conn.zincrby(key1, '444')

Conn.zincrby(key1, '444')。
 # 注意：这里val5添加了3次

# 如何获取刚才添加的呢？

li1 = conn.zrevrange(key1, 0, 10, True)

# li1就是：[('444', 3.0), ('world', 1.0), ('ooo', 1.0), ('HELLO', 1.0), ('333', 1.0)]

# 得到的数据是一个列表，取其中0-10(前10)，按照刚才添加次数排序，val5添加了3次，所以权重值最大

# True表示，获得的值是个元组，False的话里面没有权重值，默认False

li2 = conn.zrevrange(key1, 0, 10)

# li2就是：['444', 'world', 'ooo', 'HELLO', '333']

# 我统计热搜关键词排序用到了
###############################################################################################
9.配置使用jwt模式做token验证
pip install djangorestframework-jwt
参考 https://www.cnblogs.com/chichung/p/9967325.html 做法

10.要使用后台可以使用自动上传image模块 需要安装
pip --default-timeout=100 install -U Pillow

11.pycharm 使用技巧之新建文件模板

File->settings->Editor->File and Code Templates->Python Script

#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : ${DATE} ${TIME}
# @Author  : Aries
# @Site    : ${SITE}
# @File    : ${NAME}.py
# @Software: ${PRODUCT_NAME}
#####################################################################################################
12.安装使用富文本编辑器
pip install DjangoUeditor  
如果是python3 则需要下载 https://github.com/twz915/DjangoUeditor3 兼容包安装
参考 https://www.cnblogs.com/tiantianhappy/p/10286528.html
#############################################################################################
13.图标字体库更新 http://fontawesome.dashgame.com/ 下载下来  
解压后 将 css、 font 两个目录 拷贝至F:\mypro\python\ManageByDjango\extra_apps\xadmin\static\xadmin\vendor\font-awesome 下面完成更新
#########################################################################################################
14. 跨域插件安装 pip install django-cors-headers
###############################################################################################
15.pip install django-simple-captcha 图片验证码插件